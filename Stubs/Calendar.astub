import org.checkerframework.checker.index.qual.NonNegative;
package java.util;

class Calendar implements Serializable, Cloneable, Comparable<Calendar> {
    static final @NonNegative int ERA;
    static final @NonNegative int YEAR;
    static final @NonNegatove int MONTH;
    static final int WEEK_OF_YEAR;
    static final int WEEK_OF_MONTH;
    static final @NonNegative int DATE;
    static final @NonNegative int DAY_OF_MONTH;
    static final int DAY_OF_YEAR;
    static final int DAY_OF_WEEK;
    static final int DAY_OF_WEEK_IN_MONTH;
    static final @NonNegative int AM_PM;
    static final @NonNegative int HOUR;
    static final @NonNegative int HOUR_OF_DAY;
    static final @NonNegative int MINUTE;
    static final @NonNegative int SECOND;
    static final @NonNegative int MILLISECOND;
    static final int ZONE_OFFSET;
    static final int DST_OFFSET;
    static final int FIELD_COUNT;
    static final int SUNDAY;
    static final int MONDAY;
    static final int TUESDAY;
    static final int WEDNESDAY;
    static final int THURSDAY;
    static final int FRIDAY;
    static final int SATURDAY;
    static final int JANUARY;
    static final int FEBRUARY;
    static final int MARCH;
    static final int APRIL;
    static final int MAY;
    static final int JUNE;
    static final int JULY;
    static final int AUGUST;
    static final int SEPTEMBER;
    static final int OCTOBER;
    static final int NOVEMBER;
    static final int DECEMBER;
    static final int UNDECIMBER;
    static final int AM;
    static final int PM;
    static final int ALL_STYLES;
    static final int SHORT;
    static final int LONG;
    static final int NARROW_FORMAT;
    static final int NARROW_STANDALONE;
    static final int SHORT_FORMAT;
    static final int LONG_FORMAT;
    static final int SHORT_STANDALONE;
    static final int LONG_STANDALONE;
    protected int[] fields;
    protected boolean[] isSet;
    protected long time;
    protected boolean isTimeSet;
    protected boolean areFieldsSet;
    protected Calendar();
    protected Calendar(TimeZone arg0, Locale arg1);
    static Calendar getInstance();
    static Calendar getInstance(TimeZone arg0);
    static Calendar getInstance(Locale arg0);
    static Calendar getInstance(TimeZone arg0, Locale arg1);
    static Locale[] getAvailableLocales();
    protected void computeTime();
    protected void computeFields();
    Date getTime();
    void setTime(Date arg0);
    long getTimeInMillis();
    void setTimeInMillis(long arg0);
    @NonNegative int get(int arg0);
    protected int internalGet(int arg0);
    void set(int arg0, int arg1);
    void set(int arg0, int arg1, int arg2);
    void set(int arg0, int arg1, int arg2, int arg3, int arg4);
    void set(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);
    void clear();
    void clear(int arg0);
    boolean isSet(int arg0);
    String getDisplayName(int arg0, int arg1, Locale arg2);
    Map<String,Integer> getDisplayNames(int arg0, int arg1, Locale arg2);
    protected void complete();
    static Set<String> getAvailableCalendarTypes();
    String getCalendarType();
    boolean equals(Object arg0);
    int hashCode();
    boolean before(Object arg0);
    boolean after(Object arg0);
    int compareTo(Calendar arg0);
    void add(int arg0, int arg1);
    void roll(int arg0, boolean arg1);
    void roll(int arg0, int arg1);
    void setTimeZone(TimeZone arg0);
    TimeZone getTimeZone();
    void setLenient(boolean arg0);
    boolean isLenient();
    void setFirstDayOfWeek(int arg0);
    int getFirstDayOfWeek();
    void setMinimalDaysInFirstWeek(int arg0);
    int getMinimalDaysInFirstWeek();
    boolean isWeekDateSupported();
    int getWeekYear();
    void setWeekDate(int arg0, int arg1, int arg2);
    int getWeeksInWeekYear();
    int getMinimum(int arg0);
    int getMaximum(int arg0);
    int getGreatestMinimum(int arg0);
    int getLeastMaximum(int arg0);
    int getActualMinimum(int arg0);
    int getActualMaximum(int arg0);
    Object clone();
    String toString();
    Instant toInstant();
}
class Calendar$Builder {
    Builder();
    Builder setInstant(long arg0);
    Builder setInstant(Date arg0);
    Builder set(int arg0, int arg1);
    Builder setFields(int[] arg0);
    Builder setDate(int arg0, int arg1, int arg2);
    Builder setTimeOfDay(int arg0, int arg1, int arg2);
    Builder setTimeOfDay(int arg0, int arg1, int arg2, int arg3);
    Builder setWeekDate(int arg0, int arg1, int arg2);
    Builder setTimeZone(TimeZone arg0);
    Builder setLenient(boolean arg0);
    Builder setCalendarType(String arg0);
    Builder setLocale(Locale arg0);
    Builder setWeekDefinition(int arg0, int arg1);
    Calendar build();
}
